// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<Modal
  animationType="slide"
  hardwareAccelerated={false}
  onOrientationChange={undefined}
  onRequestClose={undefined}
  onShow={undefined}
  supportedOrientations={undefined}
  transparent={true}
  visible={true}
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, 0.7)",
        "height": "100.00%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100.00%",
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityLiveRegion={undefined}
      accessibilityTraits={undefined}
      accessibilityViewIsModal={undefined}
      accessible={undefined}
      collapsable={undefined}
      hitSlop={undefined}
      importantForAccessibility={undefined}
      needsOffscreenAlphaCompositing={undefined}
      onAccessibilityTap={undefined}
      onLayout={undefined}
      onMagicTap={undefined}
      pointerEvents={undefined}
      removeClippedSubviews={undefined}
      renderToHardwareTextureAndroid={undefined}
      shouldRasterizeIOS={undefined}
      style={null}
      testID={undefined}
    />
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityLiveRegion={undefined}
    accessibilityTraits={undefined}
    accessibilityViewIsModal={undefined}
    accessible={undefined}
    collapsable={undefined}
    hitSlop={undefined}
    importantForAccessibility={undefined}
    needsOffscreenAlphaCompositing={undefined}
    onAccessibilityTap={undefined}
    onLayout={undefined}
    onMagicTap={undefined}
    pointerEvents={undefined}
    removeClippedSubviews={undefined}
    renderToHardwareTextureAndroid={undefined}
    shouldRasterizeIOS={undefined}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#F0F0F0",
        "marginTop": 20,
        "minHeight": "50.00%",
        "shadowColor": "#000",
        "shadowOffset": Object {
          "height": 0,
          "width": 0,
        },
        "shadowOpacity": 0.8,
        "shadowRadius": 5,
        "width": "85.00%",
      }
    }
    testID={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    >
      Test component
    </Text>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignSelf": "center",
          "marginBottom": 20,
          "position": "relative",
          "width": "100.00%",
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityLiveRegion={undefined}
        accessibilityTraits={undefined}
        accessibilityViewIsModal={undefined}
        accessible={undefined}
        collapsable={undefined}
        hitSlop={undefined}
        importantForAccessibility={undefined}
        needsOffscreenAlphaCompositing={undefined}
        onAccessibilityTap={undefined}
        onLayout={undefined}
        onMagicTap={undefined}
        pointerEvents={undefined}
        removeClippedSubviews={undefined}
        renderToHardwareTextureAndroid={undefined}
        shouldRasterizeIOS={undefined}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "#6D7B8C",
            "borderWidth": 0,
            "height": 40,
            "justifyContent": "center",
            "width": "90.00%",
          }
        }
        testID={undefined}
      >
        <Text
          accessible={true}
          adjustsFontSizeToFit={undefined}
          allowFontScaling={true}
          ellipsizeMode="tail"
          minimumFontScale={undefined}
          numberOfLines={undefined}
          onLayout={undefined}
          onLongPress={undefined}
          onPress={undefined}
          pressRetentionOffset={undefined}
          selectable={undefined}
          selectionColor={undefined}
          style={
            Object {
              "color": "#FFF",
              "fontFamily": "Roboto",
              "fontSize": 14,
              "fontWeight": "bold",
            }
          }
          suppressHighlighting={undefined}
          testID={undefined}
          textBreakStrategy={undefined}
        >
          Close
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;
